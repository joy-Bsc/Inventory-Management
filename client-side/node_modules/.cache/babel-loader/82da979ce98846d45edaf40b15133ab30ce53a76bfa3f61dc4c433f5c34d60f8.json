{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const productSlice = createSlice({\n  name: 'products',\n  initialState: {\n    Total: 0,\n    // Initialize Total as a number, assuming it represents the count\n    ALLProduct: [] // Initialize ALLProduct as an empty array\n  },\n  reducers: {\n    setTotal: (state, action) => {\n      state.Total = action.payload; // Update Total with the payload\n    },\n    setALLProduct: (state, action) => {\n      state.ALLProduct = action.payload; // Update ALLProduct with the payload\n    }\n  }\n});\nexport const {\n  setTotal,\n  setALLProduct\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","productSlice","name","initialState","Total","ALLProduct","reducers","setTotal","state","action","payload","setALLProduct","actions","reducer"],"sources":["H:/My prac/BusinessTable/client-side/src/redux/state-slice/product-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const productSlice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    Total: 0, // Initialize Total as a number, assuming it represents the count\r\n    ALLProduct: [], // Initialize ALLProduct as an empty array\r\n  },\r\n  reducers: {\r\n    setTotal: (state, action) => {\r\n      state.Total = action.payload; // Update Total with the payload\r\n    },\r\n    setALLProduct: (state, action) => {\r\n      state.ALLProduct = action.payload; // Update ALLProduct with the payload\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTotal, setALLProduct } = productSlice.actions;\r\nexport default productSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IAAE;IACVC,UAAU,EAAE,EAAE,CAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACC,OAAO,CAAC,CAAC;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI;AAAc,CAAC,GAAGV,YAAY,CAACW,OAAO;AAC/D,eAAeX,YAAY,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}